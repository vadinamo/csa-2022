--- not autograded ---

Part 1
    blocksize = 20, n = 100: 
    blocksize = 20, n = 1000: 
    blocksize = 20, n = 2000: 
    blocksize = 20, n = 5000: 
    blocksize = 20, n = 10000: 

    Checkoff Question 1: Начиная с n = 1000
    Checkoff Question 2: Так как матрицы малого размера практически полностью могут храниться в кэш памяти,
                        что позволяет быстрее получать значения их элементов, а большие матрицы необходимо
                        разбивать на блоки, что позволяет хранить эти блоки в кэше, а транспонирование 
                        небольших блоков, в большей части хранящихся в кэше, будет происходить значительно
                        быстрее транспорирования полной матрицы.

                        А при малых размерах данное дробление излишне, так как матрицы малого размера и так
                        могут полностью хранится в кэше.

Part 2
    blocksize = 50, n = 10000:
    blocksize = 100, n = 10000:
    blocksize = 500, n = 10000:
    blocksize = 1000, n = 10000:
    blocksize = 5000, n = 10000:

    Checkoff Question 3: на основе тестов, наиболее эффективным является размер блока 500, при увеличении
                        размера блока, производительность начала значительно снижаться, это достигается за
                        счет того, что чем больше размер блока, тем меньше вероятность попадания большей
                        части отдельного блока в кэш, что приводит к возрастанию количества записей в кэш,
                        что и приводит к снижению производительности.
